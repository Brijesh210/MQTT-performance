#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// University
#define wifi_ssid "BrijeshWiFi"
#define wifi_password "IoTlab32768"
#define mqtt_server "192.168.50.54"
#define mqtt_user "vrel"
#define mqtt_password "vrel2021"

// Home
// #define wifi_ssid "Kujawska"
// #define wifi_password "17@brijesh"
// #define mqtt_server "157.158.56.54"
// #define mqtt_user "vrel"
// #define mqtt_password "vrel2018"

// MQTT topic name (change it to" BrijeshPUB1")
#define MQTTClientName "BrijeshPUB1"
#define topicName "/vrel/brijesh/temp/"

#define lastWillTopic "/lastwill/temp"
#define lastWillMessage "off"
#define mqttWelcomeMessage "on"
const char *messege = "random";
char *mes1; // 1024 bytes = 1 kb

WiFiClient espClient;
PubSubClient client(espClient);

// Interrupt
const byte interruptPin = D2;
byte state = LOW;
boolean flag = true;

long startTimeMicros = 0;
long endTimeMicros = 0;
long deltaTime = 0;
long deltaTime2 = 0;

const int totalTopicTohandle = 1;
const int totalSampleToCollect = 50;

char buffer[150];
char buffer2[512];
int count = 0;

void reconnect()
{
    while (!client.connected())
    {
        // if (client.connect(MQTTClientName, mqtt_user, mqtt_password, lastWillTopic, 0, true, lastWillMessage))
        if (client.connect(MQTTClientName, mqtt_user, mqtt_password))
        {
            Serial.print("Mqtt Connected!");
        }
        else
        {
            delay(5000);
            Serial.print("Conneting...");
        }
    }
}

void mqttPublish()
{
    if (client.connected())
    {
        sprintf(buffer, "%s", topicName);
        sprintf(buffer2, "%s", mes1);
        client.publish(buffer, buffer2, false);
    }
}
void setup()
{
    //Serial
    delay(10);
    Serial.begin(9600);

    //WIFI
    WiFi.mode(WIFI_STA);
    WiFi.begin(wifi_ssid, wifi_password);
    while (WiFi.status() != WL_CONNECTED)
    {
        delay(100);
        Serial.print(".");
    }

    Serial.print("wifi connneccted!");
    delay(1000);

    //Interrupt pin Mode
    pinMode(interruptPin, OUTPUT);
    //digitalWrite(interruptPin, LOW);
    client.setServer(mqtt_server, 1883);

    //Max Payload
    client.setBufferSize(2048);
    delay(50);
    mes1 = (char *)malloc(1024 * sizeof(char));
    char add = 'a';
    for (int i = 0; i < 1000; i++)
    {
        mes1[i] = add;
    }
}

void loop()
{
    if (!client.connected())
        reconnect();

    client.loop();
    if (flag)
    {
        for (int i = 1; i <= totalSampleToCollect; ++i)
        {
            digitalWrite(interruptPin, state);
            mqttPublish();
            delay(500);
            if (state == LOW)
                state = HIGH;
            else
                state = LOW;
            flag = false;
        }
    }
}
